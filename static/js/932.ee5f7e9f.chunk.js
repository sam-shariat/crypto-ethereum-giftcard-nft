(self.webpackChunkcrypto_ethereum_giftcard_nft=self.webpackChunkcrypto_ethereum_giftcard_nft||[]).push([[932],{42651:function(e,n,t){"use strict";t.r(n),t.d(n,{OpenloginAdapter:function(){return P},getOpenloginDefaultOptions:function(){return N}});var i=t(74165),r=t(15861),o=t(15671),a=t(43144),s=t(97326),c=t(11752),h=t(61120),u=t(60136),p=t(29388),l=t(84339),g=t(45781),f=t(4942),d=t(21480),v=t(79305),C=t.n(v),N=function(e,n){return{adapterSettings:{network:l.dr.MAINNET,clientId:"",uxMode:l.$e.POPUP},chainConfig:e?(0,g.h2)(e,n):null,loginSettings:{}}};function y(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function O(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?y(Object(t),!0).forEach((function(n){(0,f.Z)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):y(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var P=function(e){(0,u.Z)(v,e);var n=(0,p.Z)(v);function v(e){var t,i,r,a;(0,o.Z)(this,v),t=n.call(this),(0,f.Z)((0,s.Z)(t),"name",g.rW.OPENLOGIN),(0,f.Z)((0,s.Z)(t),"adapterNamespace",g.yk.MULTICHAIN),(0,f.Z)((0,s.Z)(t),"type",g.hN.IN_APP),(0,f.Z)((0,s.Z)(t),"openloginInstance",null),(0,f.Z)((0,s.Z)(t),"status",g.MP.NOT_READY),(0,f.Z)((0,s.Z)(t),"currentChainNamespace",g.EN.EIP155),(0,f.Z)((0,s.Z)(t),"openloginOptions",void 0),(0,f.Z)((0,s.Z)(t),"loginSettings",{}),(0,f.Z)((0,s.Z)(t),"privKeyProvider",null),g.cM.debug("const openlogin adapter",e);var c=N(null===(i=e.chainConfig)||void 0===i?void 0:i.chainNamespace,null===(r=e.chainConfig)||void 0===r?void 0:r.chainId);if(t.openloginOptions=O(O({clientId:"",network:l.dr.MAINNET},c.adapterSettings),e.adapterSettings||{}),t.loginSettings=O(O({},c.loginSettings),e.loginSettings),t.sessionTime=t.loginSettings.sessionTime||86400,null!==(a=e.chainConfig)&&void 0!==a&&a.chainNamespace){var h;t.currentChainNamespace=null===(h=e.chainConfig)||void 0===h?void 0:h.chainNamespace;var u=c.chainConfig?c.chainConfig:{};if(t.chainConfig=O(O({},u),null===e||void 0===e?void 0:e.chainConfig),g.cM.debug("const openlogin chainConfig",t.chainConfig),!t.chainConfig.rpcTarget&&e.chainConfig.chainNamespace!==g.EN.OTHER)throw g.Ty.invalidParams("rpcTarget is required in chainConfig")}return t}return(0,a.Z)(v,[{key:"chainConfigProxy",get:function(){return this.chainConfig?O({},this.chainConfig):null}},{key:"provider",get:function(){var e;return(null===(e=this.privKeyProvider)||void 0===e?void 0:e.provider)||null},set:function(e){throw new Error("Not implemented")}},{key:"init",value:function(){var e=(0,r.Z)((0,i.Z)().mark((function e(n){var t,r,o;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((0,c.Z)((0,h.Z)(v.prototype),"checkInitializationRequirements",this).call(this),null!==(t=this.openloginOptions)&&void 0!==t&&t.clientId){e.next=3;break}throw g.Ty.invalidParams("clientId is required before openlogin's initialization");case 3:if(this.chainConfig){e.next=5;break}throw g.Ty.invalidParams("chainConfig is required before initialization");case 5:return r=!1,this.openloginOptions.uxMode===l.$e.REDIRECT&&(o=(0,l.Gv)(),Object.keys(o).length>0&&o._pid&&(r=!0)),this.openloginOptions=O(O({},this.openloginOptions),{},{replaceUrlOnRedirect:r}),this.openloginInstance=new l.ZP(this.openloginOptions),g.cM.debug("initializing openlogin adapter init"),e.next=12,this.openloginInstance.init();case 12:if(this.status=g.MP.READY,this.emit(g.n2.READY,g.rW.OPENLOGIN),e.prev=14,g.cM.debug("initializing openlogin adapter"),!this.openloginInstance.privKey||!n.autoConnect&&!r){e.next=19;break}return e.next=19,this.connect();case 19:e.next=25;break;case 21:e.prev=21,e.t0=e.catch(14),g.cM.error("Failed to connect with cached openlogin provider",e.t0),this.emit("ERRORED",e.t0);case 25:case"end":return e.stop()}}),e,this,[[14,21]])})));return function(n){return e.apply(this,arguments)}}()},{key:"connect",value:function(){var e=(0,r.Z)((0,i.Z)().mark((function e(n){return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(0,c.Z)((0,h.Z)(v.prototype),"checkConnectionRequirements",this).call(this),this.status=g.MP.CONNECTING,this.emit(g.n2.CONNECTING,O(O({},n),{},{adapter:g.rW.OPENLOGIN})),e.prev=3,e.next=6,this.connectWithProvider(n);case 6:return e.abrupt("return",this.provider);case 9:if(e.prev=9,e.t0=e.catch(3),g.cM.error("Failed to connect with openlogin provider",e.t0),this.status=g.MP.READY,this.emit(g.n2.ERRORED,e.t0),null===e.t0||void 0===e.t0||!e.t0.message.includes("user closed popup")){e.next=16;break}throw g.RM.popupClosed();case 16:throw g.RM.connectionError("Failed to login with openlogin");case 17:case"end":return e.stop()}}),e,this,[[3,9]])})));return function(n){return e.apply(this,arguments)}}()},{key:"disconnect",value:function(){var e=(0,r.Z)((0,i.Z)().mark((function e(){var n,t=arguments;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.length>0&&void 0!==t[0]?t[0]:{cleanup:!1},this.status===g.MP.CONNECTED){e.next=3;break}throw g.RM.notConnectedError("Not connected with wallet");case 3:if(this.openloginInstance){e.next=5;break}throw g.Ty.notReady("openloginInstance is not ready");case 5:return e.next=7,this.openloginInstance.logout();case 7:n.cleanup?(this.status=g.MP.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=g.MP.READY,this.emit(g.n2.DISCONNECTED);case 9:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"authenticateUser",value:function(){var e=(0,r.Z)((0,i.Z)().mark((function e(){var n;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.status===g.MP.CONNECTED){e.next=2;break}throw g.RM.notConnectedError("Not connected with wallet, Please login/connect first");case 2:return e.next=4,this.getUserInfo();case 4:return n=e.sent,e.abrupt("return",{idToken:n.idToken});case 6:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"getUserInfo",value:function(){var e=(0,r.Z)((0,i.Z)().mark((function e(){var n;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.status===g.MP.CONNECTED){e.next=2;break}throw g.RM.notConnectedError("Not connected with wallet");case 2:if(this.openloginInstance){e.next=4;break}throw g.Ty.notReady("openloginInstance is not ready");case 4:return e.next=6,this.openloginInstance.getUserInfo();case 6:return n=e.sent,e.abrupt("return",n);case 8:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"setAdapterSettings",value:function(e){if(this.status!==g.MP.READY){var n=N();this.openloginOptions=O(O(O({},n.adapterSettings),this.openloginOptions||{}),e),e.sessionTime&&(this.loginSettings=O(O({},this.loginSettings),{},{sessionTime:e.sessionTime}))}}},{key:"setChainConfig",value:function(e){(0,c.Z)((0,h.Z)(v.prototype),"setChainConfig",this).call(this,e),this.currentChainNamespace=e.chainNamespace}},{key:"connectWithProvider",value:function(){var e=(0,r.Z)((0,i.Z)().mark((function e(n){var r,o,a,s,c,h,u,p;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.chainConfig){e.next=2;break}throw g.Ty.invalidParams("chainConfig is required before initialization");case 2:if(this.openloginInstance){e.next=4;break}throw g.Ty.notReady("openloginInstance is not ready");case 4:if(this.currentChainNamespace!==g.EN.SOLANA){e.next=12;break}return e.next=7,Promise.all([t.e(889),t.e(550),t.e(702)]).then(t.bind(t,15550));case 7:r=e.sent,o=r.SolanaPrivateKeyProvider,this.privKeyProvider=new o({config:{chainConfig:this.chainConfig}}),e.next=25;break;case 12:if(this.currentChainNamespace!==g.EN.EIP155){e.next=20;break}return e.next=15,Promise.all([t.e(562),t.e(772)]).then(t.bind(t,27562));case 15:a=e.sent,s=a.EthereumPrivateKeyProvider,this.privKeyProvider=new s({config:{chainConfig:this.chainConfig}}),e.next=25;break;case 20:if(this.currentChainNamespace!==g.EN.OTHER){e.next=24;break}this.privKeyProvider=new d.FL,e.next=25;break;case 24:throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace," found while connecting to wallet"));case 25:if(this.openloginInstance.privKey||!n){e.next=29;break}return this.loginSettings.curve||(this.loginSettings.curve=this.currentChainNamespace===g.EN.SOLANA?l.x7.ED25519:l.x7.SECP256K1),e.next=29,this.openloginInstance.login(C()(this.loginSettings,{loginProvider:n.loginProvider},{extraLoginOptions:O(O({},n.extraLoginOptions||{}),{},{login_hint:n.login_hint||(null===(c=n.extraLoginOptions)||void 0===c?void 0:c.login_hint)})}));case 29:if(!(h=this.openloginInstance.privKey)){e.next=41;break}if(this.currentChainNamespace!==g.EN.SOLANA){e.next=37;break}return e.next=34,Promise.all([t.e(889),t.e(508)]).then(t.bind(t,80834));case 34:u=e.sent,p=u.getED25519Key,h=p(h).sk.toString("hex");case 37:return e.next=39,this.privKeyProvider.setupProvider(h);case 39:this.status=g.MP.CONNECTED,this.emit(g.n2.CONNECTED,{adapter:g.rW.OPENLOGIN,reconnected:!n});case 41:case"end":return e.stop()}}),e,this)})));return function(n){return e.apply(this,arguments)}}()}]),v}(g.J5)},27790:function(){}}]);